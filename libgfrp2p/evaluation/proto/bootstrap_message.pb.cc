// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: bootstrap_message.proto

#include "bootstrap_message.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_bootstrap_5fmessage_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_bootstrap_5fmessage_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Broadcast;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_bootstrap_5fmessage_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Config;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_bootstrap_5fmessage_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Init;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_bootstrap_5fmessage_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_PullLog;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_bootstrap_5fmessage_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_PushLog;
}  // namespace protobuf_bootstrap_5fmessage_2eproto
namespace bootstrap_message {
class BootstrapMessageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BootstrapMessage>
      _instance;
} _BootstrapMessage_default_instance_;
class InitDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Init>
      _instance;
} _Init_default_instance_;
class ConfigDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Config>
      _instance;
} _Config_default_instance_;
class BroadcastDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Broadcast>
      _instance;
} _Broadcast_default_instance_;
class PullLogDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PullLog>
      _instance;
} _PullLog_default_instance_;
class PushLogDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PushLog>
      _instance;
} _PushLog_default_instance_;
}  // namespace bootstrap_message
namespace protobuf_bootstrap_5fmessage_2eproto {
static void InitDefaultsBootstrapMessage() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bootstrap_message::_BootstrapMessage_default_instance_;
    new (ptr) ::bootstrap_message::BootstrapMessage();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bootstrap_message::BootstrapMessage::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<5> scc_info_BootstrapMessage =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 5, InitDefaultsBootstrapMessage}, {
      &protobuf_bootstrap_5fmessage_2eproto::scc_info_Init.base,
      &protobuf_bootstrap_5fmessage_2eproto::scc_info_Config.base,
      &protobuf_bootstrap_5fmessage_2eproto::scc_info_Broadcast.base,
      &protobuf_bootstrap_5fmessage_2eproto::scc_info_PullLog.base,
      &protobuf_bootstrap_5fmessage_2eproto::scc_info_PushLog.base,}};

static void InitDefaultsInit() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bootstrap_message::_Init_default_instance_;
    new (ptr) ::bootstrap_message::Init();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bootstrap_message::Init::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Init =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsInit}, {}};

static void InitDefaultsConfig() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bootstrap_message::_Config_default_instance_;
    new (ptr) ::bootstrap_message::Config();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bootstrap_message::Config::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Config =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsConfig}, {}};

static void InitDefaultsBroadcast() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bootstrap_message::_Broadcast_default_instance_;
    new (ptr) ::bootstrap_message::Broadcast();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bootstrap_message::Broadcast::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Broadcast =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsBroadcast}, {}};

static void InitDefaultsPullLog() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bootstrap_message::_PullLog_default_instance_;
    new (ptr) ::bootstrap_message::PullLog();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bootstrap_message::PullLog::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_PullLog =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPullLog}, {}};

static void InitDefaultsPushLog() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bootstrap_message::_PushLog_default_instance_;
    new (ptr) ::bootstrap_message::PushLog();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bootstrap_message::PushLog::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_PushLog =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPushLog}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_BootstrapMessage.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Init.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Config.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Broadcast.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PullLog.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PushLog.base);
}

::google::protobuf::Metadata file_level_metadata[6];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[2];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bootstrap_message::BootstrapMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bootstrap_message::BootstrapMessage, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bootstrap_message::BootstrapMessage, init_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bootstrap_message::BootstrapMessage, config_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bootstrap_message::BootstrapMessage, broadcast_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bootstrap_message::BootstrapMessage, pull_log_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bootstrap_message::BootstrapMessage, push_log_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bootstrap_message::Init, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bootstrap_message::Init, port_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bootstrap_message::Config, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bootstrap_message::Config, run_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bootstrap_message::Config, eval_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bootstrap_message::Config, node_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bootstrap_message::Config, table_size_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bootstrap_message::Config, table_ids_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bootstrap_message::Config, table_ips_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bootstrap_message::Config, table_ports_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bootstrap_message::Config, num_nodes_in_dist_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bootstrap_message::Config, num_cnodes_in_dist_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bootstrap_message::Config, num_nodes_in_city_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bootstrap_message::Config, num_cnodes_in_city_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bootstrap_message::Config, num_nodes_in_state_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bootstrap_message::Config, num_cnodes_in_state_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bootstrap_message::Config, num_nodes_in_country_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bootstrap_message::Config, num_cnodes_in_country_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bootstrap_message::Config, num_nodes_in_continent_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bootstrap_message::Broadcast, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bootstrap_message::Broadcast, workload_size_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bootstrap_message::PullLog, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bootstrap_message::PullLog, run_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bootstrap_message::PushLog, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bootstrap_message::PushLog, run_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bootstrap_message::PushLog, log_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::bootstrap_message::BootstrapMessage)},
  { 11, -1, sizeof(::bootstrap_message::Init)},
  { 17, -1, sizeof(::bootstrap_message::Config)},
  { 38, -1, sizeof(::bootstrap_message::Broadcast)},
  { 44, -1, sizeof(::bootstrap_message::PullLog)},
  { 50, -1, sizeof(::bootstrap_message::PushLog)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::bootstrap_message::_BootstrapMessage_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::bootstrap_message::_Init_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::bootstrap_message::_Config_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::bootstrap_message::_Broadcast_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::bootstrap_message::_PullLog_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::bootstrap_message::_PushLog_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "bootstrap_message.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 6);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\027bootstrap_message.proto\022\021bootstrap_mes"
      "sage\"\362\002\n\020BootstrapMessage\0226\n\004type\030\001 \001(\0162"
      "(.bootstrap_message.BootstrapMessage.Typ"
      "e\022%\n\004init\030\002 \001(\0132\027.bootstrap_message.Init"
      "\022)\n\006config\030\003 \001(\0132\031.bootstrap_message.Con"
      "fig\022/\n\tbroadcast\030\004 \001(\0132\034.bootstrap_messa"
      "ge.Broadcast\022,\n\010pull_log\030\005 \001(\0132\032.bootstr"
      "ap_message.PullLog\022,\n\010push_log\030\006 \001(\0132\032.b"
      "ootstrap_message.PushLog\"G\n\004Type\022\010\n\004INIT"
      "\020\000\022\n\n\006CONFIG\020\001\022\r\n\tBROADCAST\020\003\022\014\n\010PULL_LO"
      "G\020\005\022\014\n\010PUSH_LOG\020\006\"\024\n\004Init\022\014\n\004port\030\001 \001(\r\""
      "\330\003\n\006Config\022\016\n\006run_id\030\001 \001(\r\0225\n\teval_type\030"
      "\002 \001(\0162\".bootstrap_message.Config.EvalTyp"
      "e\022\017\n\007node_id\030\003 \001(\t\022\022\n\ntable_size\030\004 \001(\r\022\021"
      "\n\ttable_ids\030\005 \003(\t\022\021\n\ttable_ips\030\006 \003(\t\022\023\n\013"
      "table_ports\030\007 \003(\r\022\031\n\021num_nodes_in_dist\030\024"
      " \001(\r\022\032\n\022num_cnodes_in_dist\030\025 \001(\r\022\031\n\021num_"
      "nodes_in_city\030\026 \001(\r\022\032\n\022num_cnodes_in_cit"
      "y\030\027 \001(\r\022\032\n\022num_nodes_in_state\030\030 \001(\r\022\033\n\023n"
      "um_cnodes_in_state\030\031 \001(\r\022\034\n\024num_nodes_in"
      "_country\030\032 \001(\r\022\035\n\025num_cnodes_in_country\030"
      "\033 \001(\r\022\036\n\026num_nodes_in_continent\030\034 \001(\r\"#\n"
      "\010EvalType\022\t\n\005HGFRR\020\000\022\014\n\010KADEMLIA\020\001\"\"\n\tBr"
      "oadcast\022\025\n\rworkload_size\030\001 \001(\r\"\031\n\007PullLo"
      "g\022\016\n\006run_id\030\001 \001(\r\"&\n\007PushLog\022\016\n\006run_id\030\001"
      " \001(\r\022\013\n\003log\030\002 \001(\tb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1025);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "bootstrap_message.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_bootstrap_5fmessage_2eproto
namespace bootstrap_message {
const ::google::protobuf::EnumDescriptor* BootstrapMessage_Type_descriptor() {
  protobuf_bootstrap_5fmessage_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_bootstrap_5fmessage_2eproto::file_level_enum_descriptors[0];
}
bool BootstrapMessage_Type_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 3:
    case 5:
    case 6:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const BootstrapMessage_Type BootstrapMessage::INIT;
const BootstrapMessage_Type BootstrapMessage::CONFIG;
const BootstrapMessage_Type BootstrapMessage::BROADCAST;
const BootstrapMessage_Type BootstrapMessage::PULL_LOG;
const BootstrapMessage_Type BootstrapMessage::PUSH_LOG;
const BootstrapMessage_Type BootstrapMessage::Type_MIN;
const BootstrapMessage_Type BootstrapMessage::Type_MAX;
const int BootstrapMessage::Type_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Config_EvalType_descriptor() {
  protobuf_bootstrap_5fmessage_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_bootstrap_5fmessage_2eproto::file_level_enum_descriptors[1];
}
bool Config_EvalType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Config_EvalType Config::HGFRR;
const Config_EvalType Config::KADEMLIA;
const Config_EvalType Config::EvalType_MIN;
const Config_EvalType Config::EvalType_MAX;
const int Config::EvalType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

void BootstrapMessage::InitAsDefaultInstance() {
  ::bootstrap_message::_BootstrapMessage_default_instance_._instance.get_mutable()->init_ = const_cast< ::bootstrap_message::Init*>(
      ::bootstrap_message::Init::internal_default_instance());
  ::bootstrap_message::_BootstrapMessage_default_instance_._instance.get_mutable()->config_ = const_cast< ::bootstrap_message::Config*>(
      ::bootstrap_message::Config::internal_default_instance());
  ::bootstrap_message::_BootstrapMessage_default_instance_._instance.get_mutable()->broadcast_ = const_cast< ::bootstrap_message::Broadcast*>(
      ::bootstrap_message::Broadcast::internal_default_instance());
  ::bootstrap_message::_BootstrapMessage_default_instance_._instance.get_mutable()->pull_log_ = const_cast< ::bootstrap_message::PullLog*>(
      ::bootstrap_message::PullLog::internal_default_instance());
  ::bootstrap_message::_BootstrapMessage_default_instance_._instance.get_mutable()->push_log_ = const_cast< ::bootstrap_message::PushLog*>(
      ::bootstrap_message::PushLog::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BootstrapMessage::kTypeFieldNumber;
const int BootstrapMessage::kInitFieldNumber;
const int BootstrapMessage::kConfigFieldNumber;
const int BootstrapMessage::kBroadcastFieldNumber;
const int BootstrapMessage::kPullLogFieldNumber;
const int BootstrapMessage::kPushLogFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BootstrapMessage::BootstrapMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_bootstrap_5fmessage_2eproto::scc_info_BootstrapMessage.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:bootstrap_message.BootstrapMessage)
}
BootstrapMessage::BootstrapMessage(const BootstrapMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_init()) {
    init_ = new ::bootstrap_message::Init(*from.init_);
  } else {
    init_ = NULL;
  }
  if (from.has_config()) {
    config_ = new ::bootstrap_message::Config(*from.config_);
  } else {
    config_ = NULL;
  }
  if (from.has_broadcast()) {
    broadcast_ = new ::bootstrap_message::Broadcast(*from.broadcast_);
  } else {
    broadcast_ = NULL;
  }
  if (from.has_pull_log()) {
    pull_log_ = new ::bootstrap_message::PullLog(*from.pull_log_);
  } else {
    pull_log_ = NULL;
  }
  if (from.has_push_log()) {
    push_log_ = new ::bootstrap_message::PushLog(*from.push_log_);
  } else {
    push_log_ = NULL;
  }
  type_ = from.type_;
  // @@protoc_insertion_point(copy_constructor:bootstrap_message.BootstrapMessage)
}

void BootstrapMessage::SharedCtor() {
  ::memset(&init_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&init_)) + sizeof(type_));
}

BootstrapMessage::~BootstrapMessage() {
  // @@protoc_insertion_point(destructor:bootstrap_message.BootstrapMessage)
  SharedDtor();
}

void BootstrapMessage::SharedDtor() {
  if (this != internal_default_instance()) delete init_;
  if (this != internal_default_instance()) delete config_;
  if (this != internal_default_instance()) delete broadcast_;
  if (this != internal_default_instance()) delete pull_log_;
  if (this != internal_default_instance()) delete push_log_;
}

void BootstrapMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* BootstrapMessage::descriptor() {
  ::protobuf_bootstrap_5fmessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_bootstrap_5fmessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BootstrapMessage& BootstrapMessage::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_bootstrap_5fmessage_2eproto::scc_info_BootstrapMessage.base);
  return *internal_default_instance();
}


void BootstrapMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:bootstrap_message.BootstrapMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && init_ != NULL) {
    delete init_;
  }
  init_ = NULL;
  if (GetArenaNoVirtual() == NULL && config_ != NULL) {
    delete config_;
  }
  config_ = NULL;
  if (GetArenaNoVirtual() == NULL && broadcast_ != NULL) {
    delete broadcast_;
  }
  broadcast_ = NULL;
  if (GetArenaNoVirtual() == NULL && pull_log_ != NULL) {
    delete pull_log_;
  }
  pull_log_ = NULL;
  if (GetArenaNoVirtual() == NULL && push_log_ != NULL) {
    delete push_log_;
  }
  push_log_ = NULL;
  type_ = 0;
  _internal_metadata_.Clear();
}

bool BootstrapMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bootstrap_message.BootstrapMessage)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .bootstrap_message.BootstrapMessage.Type type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::bootstrap_message::BootstrapMessage_Type >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .bootstrap_message.Init init = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_init()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .bootstrap_message.Config config = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .bootstrap_message.Broadcast broadcast = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_broadcast()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .bootstrap_message.PullLog pull_log = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_pull_log()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .bootstrap_message.PushLog push_log = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_push_log()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:bootstrap_message.BootstrapMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bootstrap_message.BootstrapMessage)
  return false;
#undef DO_
}

void BootstrapMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bootstrap_message.BootstrapMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .bootstrap_message.BootstrapMessage.Type type = 1;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->type(), output);
  }

  // .bootstrap_message.Init init = 2;
  if (this->has_init()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_init(), output);
  }

  // .bootstrap_message.Config config = 3;
  if (this->has_config()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_config(), output);
  }

  // .bootstrap_message.Broadcast broadcast = 4;
  if (this->has_broadcast()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_broadcast(), output);
  }

  // .bootstrap_message.PullLog pull_log = 5;
  if (this->has_pull_log()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_pull_log(), output);
  }

  // .bootstrap_message.PushLog push_log = 6;
  if (this->has_push_log()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->_internal_push_log(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:bootstrap_message.BootstrapMessage)
}

::google::protobuf::uint8* BootstrapMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:bootstrap_message.BootstrapMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .bootstrap_message.BootstrapMessage.Type type = 1;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->type(), target);
  }

  // .bootstrap_message.Init init = 2;
  if (this->has_init()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_init(), deterministic, target);
  }

  // .bootstrap_message.Config config = 3;
  if (this->has_config()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_config(), deterministic, target);
  }

  // .bootstrap_message.Broadcast broadcast = 4;
  if (this->has_broadcast()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_broadcast(), deterministic, target);
  }

  // .bootstrap_message.PullLog pull_log = 5;
  if (this->has_pull_log()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_pull_log(), deterministic, target);
  }

  // .bootstrap_message.PushLog push_log = 6;
  if (this->has_push_log()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->_internal_push_log(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bootstrap_message.BootstrapMessage)
  return target;
}

size_t BootstrapMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bootstrap_message.BootstrapMessage)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .bootstrap_message.Init init = 2;
  if (this->has_init()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *init_);
  }

  // .bootstrap_message.Config config = 3;
  if (this->has_config()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *config_);
  }

  // .bootstrap_message.Broadcast broadcast = 4;
  if (this->has_broadcast()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *broadcast_);
  }

  // .bootstrap_message.PullLog pull_log = 5;
  if (this->has_pull_log()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *pull_log_);
  }

  // .bootstrap_message.PushLog push_log = 6;
  if (this->has_push_log()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *push_log_);
  }

  // .bootstrap_message.BootstrapMessage.Type type = 1;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BootstrapMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bootstrap_message.BootstrapMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const BootstrapMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BootstrapMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bootstrap_message.BootstrapMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bootstrap_message.BootstrapMessage)
    MergeFrom(*source);
  }
}

void BootstrapMessage::MergeFrom(const BootstrapMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bootstrap_message.BootstrapMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_init()) {
    mutable_init()->::bootstrap_message::Init::MergeFrom(from.init());
  }
  if (from.has_config()) {
    mutable_config()->::bootstrap_message::Config::MergeFrom(from.config());
  }
  if (from.has_broadcast()) {
    mutable_broadcast()->::bootstrap_message::Broadcast::MergeFrom(from.broadcast());
  }
  if (from.has_pull_log()) {
    mutable_pull_log()->::bootstrap_message::PullLog::MergeFrom(from.pull_log());
  }
  if (from.has_push_log()) {
    mutable_push_log()->::bootstrap_message::PushLog::MergeFrom(from.push_log());
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
}

void BootstrapMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bootstrap_message.BootstrapMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BootstrapMessage::CopyFrom(const BootstrapMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bootstrap_message.BootstrapMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BootstrapMessage::IsInitialized() const {
  return true;
}

void BootstrapMessage::Swap(BootstrapMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BootstrapMessage::InternalSwap(BootstrapMessage* other) {
  using std::swap;
  swap(init_, other->init_);
  swap(config_, other->config_);
  swap(broadcast_, other->broadcast_);
  swap(pull_log_, other->pull_log_);
  swap(push_log_, other->push_log_);
  swap(type_, other->type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata BootstrapMessage::GetMetadata() const {
  protobuf_bootstrap_5fmessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_bootstrap_5fmessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Init::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Init::kPortFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Init::Init()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_bootstrap_5fmessage_2eproto::scc_info_Init.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:bootstrap_message.Init)
}
Init::Init(const Init& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  port_ = from.port_;
  // @@protoc_insertion_point(copy_constructor:bootstrap_message.Init)
}

void Init::SharedCtor() {
  port_ = 0u;
}

Init::~Init() {
  // @@protoc_insertion_point(destructor:bootstrap_message.Init)
  SharedDtor();
}

void Init::SharedDtor() {
}

void Init::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Init::descriptor() {
  ::protobuf_bootstrap_5fmessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_bootstrap_5fmessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Init& Init::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_bootstrap_5fmessage_2eproto::scc_info_Init.base);
  return *internal_default_instance();
}


void Init::Clear() {
// @@protoc_insertion_point(message_clear_start:bootstrap_message.Init)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  port_ = 0u;
  _internal_metadata_.Clear();
}

bool Init::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bootstrap_message.Init)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 port = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &port_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:bootstrap_message.Init)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bootstrap_message.Init)
  return false;
#undef DO_
}

void Init::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bootstrap_message.Init)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 port = 1;
  if (this->port() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->port(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:bootstrap_message.Init)
}

::google::protobuf::uint8* Init::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:bootstrap_message.Init)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 port = 1;
  if (this->port() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->port(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bootstrap_message.Init)
  return target;
}

size_t Init::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bootstrap_message.Init)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 port = 1;
  if (this->port() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->port());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Init::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bootstrap_message.Init)
  GOOGLE_DCHECK_NE(&from, this);
  const Init* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Init>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bootstrap_message.Init)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bootstrap_message.Init)
    MergeFrom(*source);
  }
}

void Init::MergeFrom(const Init& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bootstrap_message.Init)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.port() != 0) {
    set_port(from.port());
  }
}

void Init::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bootstrap_message.Init)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Init::CopyFrom(const Init& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bootstrap_message.Init)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Init::IsInitialized() const {
  return true;
}

void Init::Swap(Init* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Init::InternalSwap(Init* other) {
  using std::swap;
  swap(port_, other->port_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Init::GetMetadata() const {
  protobuf_bootstrap_5fmessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_bootstrap_5fmessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Config::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Config::kRunIdFieldNumber;
const int Config::kEvalTypeFieldNumber;
const int Config::kNodeIdFieldNumber;
const int Config::kTableSizeFieldNumber;
const int Config::kTableIdsFieldNumber;
const int Config::kTableIpsFieldNumber;
const int Config::kTablePortsFieldNumber;
const int Config::kNumNodesInDistFieldNumber;
const int Config::kNumCnodesInDistFieldNumber;
const int Config::kNumNodesInCityFieldNumber;
const int Config::kNumCnodesInCityFieldNumber;
const int Config::kNumNodesInStateFieldNumber;
const int Config::kNumCnodesInStateFieldNumber;
const int Config::kNumNodesInCountryFieldNumber;
const int Config::kNumCnodesInCountryFieldNumber;
const int Config::kNumNodesInContinentFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Config::Config()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_bootstrap_5fmessage_2eproto::scc_info_Config.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:bootstrap_message.Config)
}
Config::Config(const Config& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      table_ids_(from.table_ids_),
      table_ips_(from.table_ips_),
      table_ports_(from.table_ports_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  node_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.node_id().size() > 0) {
    node_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.node_id_);
  }
  ::memcpy(&run_id_, &from.run_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&num_nodes_in_continent_) -
    reinterpret_cast<char*>(&run_id_)) + sizeof(num_nodes_in_continent_));
  // @@protoc_insertion_point(copy_constructor:bootstrap_message.Config)
}

void Config::SharedCtor() {
  node_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&run_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&num_nodes_in_continent_) -
      reinterpret_cast<char*>(&run_id_)) + sizeof(num_nodes_in_continent_));
}

Config::~Config() {
  // @@protoc_insertion_point(destructor:bootstrap_message.Config)
  SharedDtor();
}

void Config::SharedDtor() {
  node_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Config::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Config::descriptor() {
  ::protobuf_bootstrap_5fmessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_bootstrap_5fmessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Config& Config::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_bootstrap_5fmessage_2eproto::scc_info_Config.base);
  return *internal_default_instance();
}


void Config::Clear() {
// @@protoc_insertion_point(message_clear_start:bootstrap_message.Config)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  table_ids_.Clear();
  table_ips_.Clear();
  table_ports_.Clear();
  node_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&run_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&num_nodes_in_continent_) -
      reinterpret_cast<char*>(&run_id_)) + sizeof(num_nodes_in_continent_));
  _internal_metadata_.Clear();
}

bool Config::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bootstrap_message.Config)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 run_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &run_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .bootstrap_message.Config.EvalType eval_type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_eval_type(static_cast< ::bootstrap_message::Config_EvalType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string node_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_node_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->node_id().data(), static_cast<int>(this->node_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "bootstrap_message.Config.node_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 table_size = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &table_size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string table_ids = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_table_ids()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->table_ids(this->table_ids_size() - 1).data(),
            static_cast<int>(this->table_ids(this->table_ids_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "bootstrap_message.Config.table_ids"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string table_ips = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_table_ips()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->table_ips(this->table_ips_size() - 1).data(),
            static_cast<int>(this->table_ips(this->table_ips_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "bootstrap_message.Config.table_ips"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 table_ports = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_table_ports())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 58u, input, this->mutable_table_ports())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 num_nodes_in_dist = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(160u /* 160 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &num_nodes_in_dist_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 num_cnodes_in_dist = 21;
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(168u /* 168 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &num_cnodes_in_dist_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 num_nodes_in_city = 22;
      case 22: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(176u /* 176 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &num_nodes_in_city_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 num_cnodes_in_city = 23;
      case 23: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(184u /* 184 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &num_cnodes_in_city_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 num_nodes_in_state = 24;
      case 24: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(192u /* 192 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &num_nodes_in_state_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 num_cnodes_in_state = 25;
      case 25: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(200u /* 200 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &num_cnodes_in_state_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 num_nodes_in_country = 26;
      case 26: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(208u /* 208 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &num_nodes_in_country_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 num_cnodes_in_country = 27;
      case 27: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(216u /* 216 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &num_cnodes_in_country_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 num_nodes_in_continent = 28;
      case 28: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(224u /* 224 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &num_nodes_in_continent_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:bootstrap_message.Config)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bootstrap_message.Config)
  return false;
#undef DO_
}

void Config::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bootstrap_message.Config)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 run_id = 1;
  if (this->run_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->run_id(), output);
  }

  // .bootstrap_message.Config.EvalType eval_type = 2;
  if (this->eval_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->eval_type(), output);
  }

  // string node_id = 3;
  if (this->node_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->node_id().data(), static_cast<int>(this->node_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bootstrap_message.Config.node_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->node_id(), output);
  }

  // uint32 table_size = 4;
  if (this->table_size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->table_size(), output);
  }

  // repeated string table_ids = 5;
  for (int i = 0, n = this->table_ids_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->table_ids(i).data(), static_cast<int>(this->table_ids(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bootstrap_message.Config.table_ids");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      5, this->table_ids(i), output);
  }

  // repeated string table_ips = 6;
  for (int i = 0, n = this->table_ips_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->table_ips(i).data(), static_cast<int>(this->table_ips(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bootstrap_message.Config.table_ips");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      6, this->table_ips(i), output);
  }

  // repeated uint32 table_ports = 7;
  if (this->table_ports_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(7, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _table_ports_cached_byte_size_));
  }
  for (int i = 0, n = this->table_ports_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->table_ports(i), output);
  }

  // uint32 num_nodes_in_dist = 20;
  if (this->num_nodes_in_dist() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(20, this->num_nodes_in_dist(), output);
  }

  // uint32 num_cnodes_in_dist = 21;
  if (this->num_cnodes_in_dist() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(21, this->num_cnodes_in_dist(), output);
  }

  // uint32 num_nodes_in_city = 22;
  if (this->num_nodes_in_city() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(22, this->num_nodes_in_city(), output);
  }

  // uint32 num_cnodes_in_city = 23;
  if (this->num_cnodes_in_city() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(23, this->num_cnodes_in_city(), output);
  }

  // uint32 num_nodes_in_state = 24;
  if (this->num_nodes_in_state() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(24, this->num_nodes_in_state(), output);
  }

  // uint32 num_cnodes_in_state = 25;
  if (this->num_cnodes_in_state() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(25, this->num_cnodes_in_state(), output);
  }

  // uint32 num_nodes_in_country = 26;
  if (this->num_nodes_in_country() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(26, this->num_nodes_in_country(), output);
  }

  // uint32 num_cnodes_in_country = 27;
  if (this->num_cnodes_in_country() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(27, this->num_cnodes_in_country(), output);
  }

  // uint32 num_nodes_in_continent = 28;
  if (this->num_nodes_in_continent() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(28, this->num_nodes_in_continent(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:bootstrap_message.Config)
}

::google::protobuf::uint8* Config::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:bootstrap_message.Config)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 run_id = 1;
  if (this->run_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->run_id(), target);
  }

  // .bootstrap_message.Config.EvalType eval_type = 2;
  if (this->eval_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->eval_type(), target);
  }

  // string node_id = 3;
  if (this->node_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->node_id().data(), static_cast<int>(this->node_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bootstrap_message.Config.node_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->node_id(), target);
  }

  // uint32 table_size = 4;
  if (this->table_size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->table_size(), target);
  }

  // repeated string table_ids = 5;
  for (int i = 0, n = this->table_ids_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->table_ids(i).data(), static_cast<int>(this->table_ids(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bootstrap_message.Config.table_ids");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(5, this->table_ids(i), target);
  }

  // repeated string table_ips = 6;
  for (int i = 0, n = this->table_ips_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->table_ips(i).data(), static_cast<int>(this->table_ips(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bootstrap_message.Config.table_ips");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(6, this->table_ips(i), target);
  }

  // repeated uint32 table_ports = 7;
  if (this->table_ports_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      7,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _table_ports_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->table_ports_, target);
  }

  // uint32 num_nodes_in_dist = 20;
  if (this->num_nodes_in_dist() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(20, this->num_nodes_in_dist(), target);
  }

  // uint32 num_cnodes_in_dist = 21;
  if (this->num_cnodes_in_dist() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(21, this->num_cnodes_in_dist(), target);
  }

  // uint32 num_nodes_in_city = 22;
  if (this->num_nodes_in_city() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(22, this->num_nodes_in_city(), target);
  }

  // uint32 num_cnodes_in_city = 23;
  if (this->num_cnodes_in_city() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(23, this->num_cnodes_in_city(), target);
  }

  // uint32 num_nodes_in_state = 24;
  if (this->num_nodes_in_state() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(24, this->num_nodes_in_state(), target);
  }

  // uint32 num_cnodes_in_state = 25;
  if (this->num_cnodes_in_state() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(25, this->num_cnodes_in_state(), target);
  }

  // uint32 num_nodes_in_country = 26;
  if (this->num_nodes_in_country() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(26, this->num_nodes_in_country(), target);
  }

  // uint32 num_cnodes_in_country = 27;
  if (this->num_cnodes_in_country() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(27, this->num_cnodes_in_country(), target);
  }

  // uint32 num_nodes_in_continent = 28;
  if (this->num_nodes_in_continent() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(28, this->num_nodes_in_continent(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bootstrap_message.Config)
  return target;
}

size_t Config::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bootstrap_message.Config)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string table_ids = 5;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->table_ids_size());
  for (int i = 0, n = this->table_ids_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->table_ids(i));
  }

  // repeated string table_ips = 6;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->table_ips_size());
  for (int i = 0, n = this->table_ips_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->table_ips(i));
  }

  // repeated uint32 table_ports = 7;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->table_ports_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _table_ports_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // string node_id = 3;
  if (this->node_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->node_id());
  }

  // uint32 run_id = 1;
  if (this->run_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->run_id());
  }

  // .bootstrap_message.Config.EvalType eval_type = 2;
  if (this->eval_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->eval_type());
  }

  // uint32 table_size = 4;
  if (this->table_size() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->table_size());
  }

  // uint32 num_nodes_in_dist = 20;
  if (this->num_nodes_in_dist() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->num_nodes_in_dist());
  }

  // uint32 num_cnodes_in_dist = 21;
  if (this->num_cnodes_in_dist() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->num_cnodes_in_dist());
  }

  // uint32 num_nodes_in_city = 22;
  if (this->num_nodes_in_city() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->num_nodes_in_city());
  }

  // uint32 num_cnodes_in_city = 23;
  if (this->num_cnodes_in_city() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->num_cnodes_in_city());
  }

  // uint32 num_nodes_in_state = 24;
  if (this->num_nodes_in_state() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->num_nodes_in_state());
  }

  // uint32 num_cnodes_in_state = 25;
  if (this->num_cnodes_in_state() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->num_cnodes_in_state());
  }

  // uint32 num_nodes_in_country = 26;
  if (this->num_nodes_in_country() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->num_nodes_in_country());
  }

  // uint32 num_cnodes_in_country = 27;
  if (this->num_cnodes_in_country() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->num_cnodes_in_country());
  }

  // uint32 num_nodes_in_continent = 28;
  if (this->num_nodes_in_continent() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->num_nodes_in_continent());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Config::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bootstrap_message.Config)
  GOOGLE_DCHECK_NE(&from, this);
  const Config* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Config>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bootstrap_message.Config)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bootstrap_message.Config)
    MergeFrom(*source);
  }
}

void Config::MergeFrom(const Config& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bootstrap_message.Config)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  table_ids_.MergeFrom(from.table_ids_);
  table_ips_.MergeFrom(from.table_ips_);
  table_ports_.MergeFrom(from.table_ports_);
  if (from.node_id().size() > 0) {

    node_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.node_id_);
  }
  if (from.run_id() != 0) {
    set_run_id(from.run_id());
  }
  if (from.eval_type() != 0) {
    set_eval_type(from.eval_type());
  }
  if (from.table_size() != 0) {
    set_table_size(from.table_size());
  }
  if (from.num_nodes_in_dist() != 0) {
    set_num_nodes_in_dist(from.num_nodes_in_dist());
  }
  if (from.num_cnodes_in_dist() != 0) {
    set_num_cnodes_in_dist(from.num_cnodes_in_dist());
  }
  if (from.num_nodes_in_city() != 0) {
    set_num_nodes_in_city(from.num_nodes_in_city());
  }
  if (from.num_cnodes_in_city() != 0) {
    set_num_cnodes_in_city(from.num_cnodes_in_city());
  }
  if (from.num_nodes_in_state() != 0) {
    set_num_nodes_in_state(from.num_nodes_in_state());
  }
  if (from.num_cnodes_in_state() != 0) {
    set_num_cnodes_in_state(from.num_cnodes_in_state());
  }
  if (from.num_nodes_in_country() != 0) {
    set_num_nodes_in_country(from.num_nodes_in_country());
  }
  if (from.num_cnodes_in_country() != 0) {
    set_num_cnodes_in_country(from.num_cnodes_in_country());
  }
  if (from.num_nodes_in_continent() != 0) {
    set_num_nodes_in_continent(from.num_nodes_in_continent());
  }
}

void Config::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bootstrap_message.Config)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Config::CopyFrom(const Config& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bootstrap_message.Config)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Config::IsInitialized() const {
  return true;
}

void Config::Swap(Config* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Config::InternalSwap(Config* other) {
  using std::swap;
  table_ids_.InternalSwap(CastToBase(&other->table_ids_));
  table_ips_.InternalSwap(CastToBase(&other->table_ips_));
  table_ports_.InternalSwap(&other->table_ports_);
  node_id_.Swap(&other->node_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(run_id_, other->run_id_);
  swap(eval_type_, other->eval_type_);
  swap(table_size_, other->table_size_);
  swap(num_nodes_in_dist_, other->num_nodes_in_dist_);
  swap(num_cnodes_in_dist_, other->num_cnodes_in_dist_);
  swap(num_nodes_in_city_, other->num_nodes_in_city_);
  swap(num_cnodes_in_city_, other->num_cnodes_in_city_);
  swap(num_nodes_in_state_, other->num_nodes_in_state_);
  swap(num_cnodes_in_state_, other->num_cnodes_in_state_);
  swap(num_nodes_in_country_, other->num_nodes_in_country_);
  swap(num_cnodes_in_country_, other->num_cnodes_in_country_);
  swap(num_nodes_in_continent_, other->num_nodes_in_continent_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Config::GetMetadata() const {
  protobuf_bootstrap_5fmessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_bootstrap_5fmessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Broadcast::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Broadcast::kWorkloadSizeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Broadcast::Broadcast()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_bootstrap_5fmessage_2eproto::scc_info_Broadcast.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:bootstrap_message.Broadcast)
}
Broadcast::Broadcast(const Broadcast& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  workload_size_ = from.workload_size_;
  // @@protoc_insertion_point(copy_constructor:bootstrap_message.Broadcast)
}

void Broadcast::SharedCtor() {
  workload_size_ = 0u;
}

Broadcast::~Broadcast() {
  // @@protoc_insertion_point(destructor:bootstrap_message.Broadcast)
  SharedDtor();
}

void Broadcast::SharedDtor() {
}

void Broadcast::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Broadcast::descriptor() {
  ::protobuf_bootstrap_5fmessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_bootstrap_5fmessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Broadcast& Broadcast::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_bootstrap_5fmessage_2eproto::scc_info_Broadcast.base);
  return *internal_default_instance();
}


void Broadcast::Clear() {
// @@protoc_insertion_point(message_clear_start:bootstrap_message.Broadcast)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  workload_size_ = 0u;
  _internal_metadata_.Clear();
}

bool Broadcast::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bootstrap_message.Broadcast)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 workload_size = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &workload_size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:bootstrap_message.Broadcast)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bootstrap_message.Broadcast)
  return false;
#undef DO_
}

void Broadcast::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bootstrap_message.Broadcast)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 workload_size = 1;
  if (this->workload_size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->workload_size(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:bootstrap_message.Broadcast)
}

::google::protobuf::uint8* Broadcast::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:bootstrap_message.Broadcast)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 workload_size = 1;
  if (this->workload_size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->workload_size(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bootstrap_message.Broadcast)
  return target;
}

size_t Broadcast::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bootstrap_message.Broadcast)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 workload_size = 1;
  if (this->workload_size() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->workload_size());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Broadcast::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bootstrap_message.Broadcast)
  GOOGLE_DCHECK_NE(&from, this);
  const Broadcast* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Broadcast>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bootstrap_message.Broadcast)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bootstrap_message.Broadcast)
    MergeFrom(*source);
  }
}

void Broadcast::MergeFrom(const Broadcast& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bootstrap_message.Broadcast)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.workload_size() != 0) {
    set_workload_size(from.workload_size());
  }
}

void Broadcast::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bootstrap_message.Broadcast)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Broadcast::CopyFrom(const Broadcast& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bootstrap_message.Broadcast)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Broadcast::IsInitialized() const {
  return true;
}

void Broadcast::Swap(Broadcast* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Broadcast::InternalSwap(Broadcast* other) {
  using std::swap;
  swap(workload_size_, other->workload_size_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Broadcast::GetMetadata() const {
  protobuf_bootstrap_5fmessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_bootstrap_5fmessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PullLog::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PullLog::kRunIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PullLog::PullLog()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_bootstrap_5fmessage_2eproto::scc_info_PullLog.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:bootstrap_message.PullLog)
}
PullLog::PullLog(const PullLog& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  run_id_ = from.run_id_;
  // @@protoc_insertion_point(copy_constructor:bootstrap_message.PullLog)
}

void PullLog::SharedCtor() {
  run_id_ = 0u;
}

PullLog::~PullLog() {
  // @@protoc_insertion_point(destructor:bootstrap_message.PullLog)
  SharedDtor();
}

void PullLog::SharedDtor() {
}

void PullLog::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PullLog::descriptor() {
  ::protobuf_bootstrap_5fmessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_bootstrap_5fmessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PullLog& PullLog::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_bootstrap_5fmessage_2eproto::scc_info_PullLog.base);
  return *internal_default_instance();
}


void PullLog::Clear() {
// @@protoc_insertion_point(message_clear_start:bootstrap_message.PullLog)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  run_id_ = 0u;
  _internal_metadata_.Clear();
}

bool PullLog::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bootstrap_message.PullLog)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 run_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &run_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:bootstrap_message.PullLog)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bootstrap_message.PullLog)
  return false;
#undef DO_
}

void PullLog::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bootstrap_message.PullLog)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 run_id = 1;
  if (this->run_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->run_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:bootstrap_message.PullLog)
}

::google::protobuf::uint8* PullLog::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:bootstrap_message.PullLog)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 run_id = 1;
  if (this->run_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->run_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bootstrap_message.PullLog)
  return target;
}

size_t PullLog::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bootstrap_message.PullLog)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 run_id = 1;
  if (this->run_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->run_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PullLog::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bootstrap_message.PullLog)
  GOOGLE_DCHECK_NE(&from, this);
  const PullLog* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PullLog>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bootstrap_message.PullLog)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bootstrap_message.PullLog)
    MergeFrom(*source);
  }
}

void PullLog::MergeFrom(const PullLog& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bootstrap_message.PullLog)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.run_id() != 0) {
    set_run_id(from.run_id());
  }
}

void PullLog::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bootstrap_message.PullLog)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PullLog::CopyFrom(const PullLog& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bootstrap_message.PullLog)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PullLog::IsInitialized() const {
  return true;
}

void PullLog::Swap(PullLog* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PullLog::InternalSwap(PullLog* other) {
  using std::swap;
  swap(run_id_, other->run_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PullLog::GetMetadata() const {
  protobuf_bootstrap_5fmessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_bootstrap_5fmessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PushLog::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PushLog::kRunIdFieldNumber;
const int PushLog::kLogFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PushLog::PushLog()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_bootstrap_5fmessage_2eproto::scc_info_PushLog.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:bootstrap_message.PushLog)
}
PushLog::PushLog(const PushLog& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  log_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.log().size() > 0) {
    log_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.log_);
  }
  run_id_ = from.run_id_;
  // @@protoc_insertion_point(copy_constructor:bootstrap_message.PushLog)
}

void PushLog::SharedCtor() {
  log_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  run_id_ = 0u;
}

PushLog::~PushLog() {
  // @@protoc_insertion_point(destructor:bootstrap_message.PushLog)
  SharedDtor();
}

void PushLog::SharedDtor() {
  log_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PushLog::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PushLog::descriptor() {
  ::protobuf_bootstrap_5fmessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_bootstrap_5fmessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PushLog& PushLog::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_bootstrap_5fmessage_2eproto::scc_info_PushLog.base);
  return *internal_default_instance();
}


void PushLog::Clear() {
// @@protoc_insertion_point(message_clear_start:bootstrap_message.PushLog)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  log_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  run_id_ = 0u;
  _internal_metadata_.Clear();
}

bool PushLog::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bootstrap_message.PushLog)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 run_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &run_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string log = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_log()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->log().data(), static_cast<int>(this->log().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "bootstrap_message.PushLog.log"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:bootstrap_message.PushLog)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bootstrap_message.PushLog)
  return false;
#undef DO_
}

void PushLog::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bootstrap_message.PushLog)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 run_id = 1;
  if (this->run_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->run_id(), output);
  }

  // string log = 2;
  if (this->log().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->log().data(), static_cast<int>(this->log().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bootstrap_message.PushLog.log");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->log(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:bootstrap_message.PushLog)
}

::google::protobuf::uint8* PushLog::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:bootstrap_message.PushLog)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 run_id = 1;
  if (this->run_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->run_id(), target);
  }

  // string log = 2;
  if (this->log().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->log().data(), static_cast<int>(this->log().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bootstrap_message.PushLog.log");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->log(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bootstrap_message.PushLog)
  return target;
}

size_t PushLog::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bootstrap_message.PushLog)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string log = 2;
  if (this->log().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->log());
  }

  // uint32 run_id = 1;
  if (this->run_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->run_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PushLog::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bootstrap_message.PushLog)
  GOOGLE_DCHECK_NE(&from, this);
  const PushLog* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PushLog>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bootstrap_message.PushLog)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bootstrap_message.PushLog)
    MergeFrom(*source);
  }
}

void PushLog::MergeFrom(const PushLog& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bootstrap_message.PushLog)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.log().size() > 0) {

    log_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.log_);
  }
  if (from.run_id() != 0) {
    set_run_id(from.run_id());
  }
}

void PushLog::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bootstrap_message.PushLog)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PushLog::CopyFrom(const PushLog& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bootstrap_message.PushLog)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PushLog::IsInitialized() const {
  return true;
}

void PushLog::Swap(PushLog* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PushLog::InternalSwap(PushLog* other) {
  using std::swap;
  log_.Swap(&other->log_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(run_id_, other->run_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PushLog::GetMetadata() const {
  protobuf_bootstrap_5fmessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_bootstrap_5fmessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace bootstrap_message
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::bootstrap_message::BootstrapMessage* Arena::CreateMaybeMessage< ::bootstrap_message::BootstrapMessage >(Arena* arena) {
  return Arena::CreateInternal< ::bootstrap_message::BootstrapMessage >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::bootstrap_message::Init* Arena::CreateMaybeMessage< ::bootstrap_message::Init >(Arena* arena) {
  return Arena::CreateInternal< ::bootstrap_message::Init >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::bootstrap_message::Config* Arena::CreateMaybeMessage< ::bootstrap_message::Config >(Arena* arena) {
  return Arena::CreateInternal< ::bootstrap_message::Config >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::bootstrap_message::Broadcast* Arena::CreateMaybeMessage< ::bootstrap_message::Broadcast >(Arena* arena) {
  return Arena::CreateInternal< ::bootstrap_message::Broadcast >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::bootstrap_message::PullLog* Arena::CreateMaybeMessage< ::bootstrap_message::PullLog >(Arena* arena) {
  return Arena::CreateInternal< ::bootstrap_message::PullLog >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::bootstrap_message::PushLog* Arena::CreateMaybeMessage< ::bootstrap_message::PushLog >(Arena* arena) {
  return Arena::CreateInternal< ::bootstrap_message::PushLog >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
